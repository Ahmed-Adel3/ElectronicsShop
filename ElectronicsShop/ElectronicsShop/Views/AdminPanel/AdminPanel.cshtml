@inject IViewLocalizer Localizer
@{
    ViewData["Title"] = Localizer["ProductsList"];
}

<div class="container text-center">
    <div class="row">
        <div class="col">
            <h1 class="display-4">@Localizer["ProductsList"]</h1>
        </div>
    </div>
    <div class="row form-group">
        <div class="col-2"></div>
        <div class="col-2">
            <select class="custom-select" onchange="loadProducts(1)" id="selectionsDiv">
                <option value="0" selected> @Localizer["SelectType"]</option>
            </select>
        </div>
        <div class="col-1"></div>
        <div class="col-2">
            <a type="button" asp-action="AddNewProduct" asp-controller="AdminPanel" class="btn btn-success"><i class="fas fa-plus-circle"></i> &nbsp; @Localizer["AddProductBtn"]</a>
        </div>
        <div class="col-1"></div>
        <div class="col-2">
            <a type="button" asp-action="AllOrders" asp-controller="AdminPanel" class="btn btn-success">@Localizer["ViewOrders"]</a>
        </div>
        <div class="col-2"></div>
    </div>
    <div class="row">
        <div class="col">
            <div class="container-fluid">
                <table class="table table-striped table-hover table-sm">
                    <thead class="table-dark">
                        <tr>
                            <th scope="col">@Localizer["ProductName"]</th>
                            <th scope="col">@Localizer["Type"]</th>
                            <th scope="col">@Localizer["Price"]</th>
                            <th scope="col">@Localizer["Discount"]</th>
                            <th scope="col">@Localizer["FinalPrice"]</th>
                            <th scope="col">@Localizer["DiscountOf2"]</th>
                        </tr>
                    </thead>
                    <tbody id="gridBodyContainer">
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <div class="btn-group">
                <button type="button" class="btn btn-primary" id="prevBtn" disabled> <i class="fas fa-arrow-circle-left"></i> @Localizer["PreviousBtn"]</button>
                <span id="navBtnsSpan" class="btn-group"></span>
                <button type="button" class="btn btn-primary" id="nextBtn"> @Localizer["NextBtn"] <i class="fas fa-arrow-circle-right"></i></button>
            </div>
        </div>
        <div class="col">
            <label>@Localizer["Page"] <span id="pageNum"></span> @Localizer["of"] <span id="totalPagesNum"></span> @Localizer["Pages"]</label>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        window.onload = () => {
            loadProducts(1);
            loadProductTypes();
        };

        let drawGridRows = returnData => {       
            var gridBody = document.getElementById("gridBodyContainer");
            General.emptyNode(gridBody);
            returnData.ProductRows.forEach(row => gridBody.innerHTML +=
                `<tr>
                    <td>${row.Name}</td>
                    <td>${row.TypeName}</td>
                    <td>${row.OriginalPrice}</td>
                    <td>${row.Discount} %</td>
                    <td>${row.FinalPrice}</td>
                    <td>${row.DiscountOfTwo} %</td>
                </tr>`);

            let prevBtn = document.getElementById('prevBtn');
            prevBtn.disabled = returnData.IsFirstPage;
            prevBtn.onclick = loadProducts.bind(this, returnData.CurrentPageNumber - 1);

            let nextBtn = document.getElementById('nextBtn');
            nextBtn.disabled = returnData.IsLastPage;
            nextBtn.onclick = loadProducts.bind(this, returnData.CurrentPageNumber + 1);

            document.getElementById("pageNum").innerHTML = returnData.CurrentPageNumber;
            document.getElementById("totalPagesNum").innerHTML = returnData.TotalPagesNumber;

            General.createNavigationButtons(returnData.CurrentPageNumber, returnData.TotalPagesNumber, "navBtnsSpan", loadProducts );
        }

        let loadProducts = (pageNum) => {
            let typeId = document.getElementById("selectionsDiv").value;
            General.sendAjax("/AdminPanel/GetGridData", data => drawGridRows(data), { pageNum, typeId })
        };

        let loadProductTypes = () => {
            General.sendAjax("/AdminPanel/GetProductTypes", data => General.populateTypesDdl(data,"selectionsDiv"))
        };
    </script>
}


